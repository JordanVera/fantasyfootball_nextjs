datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int        @id @default(autoincrement())
  name          String?
  firstname     String?
  lastname      String?
  username      String?
  password      String?
  email         String?    @unique
  image         String?
  bullets       Int        @default(0) @map("bullets")
  emailVerified DateTime?  @map("emailVerified")
  createdAt     DateTime   @default(now()) @map("createdAt")
  updatedAt     DateTime   @updatedAt @map("updatedAt")
  Account       Account[]
  Session       Session[]
  Checkout      Checkout[]
  Picks         Picks[]

  @@map("users")
}

model Account {
  id                 Int       @id @default(autoincrement())
  userId             Int       @map("userId")
  type               String?   @map("type")
  providerType       String?   @map("providerType")
  provider           String    @map("provider")
  providerAccountId  String    @map("providerAccountId")
  refreshToken       String?   @map("refreshToken")
  access_token       String?   @map("access_token") @db.Text
  token_type         String?   @map("token_type")
  scope              String?   @map("scope")
  id_token           String?   @map("id_token") @db.Text
  accessTokenExpires DateTime? @map("accessTokenExpires")
  expires_at         BigInt?   @map("expires_at")
  createdAt          DateTime  @default(now()) @map("createdAt")
  updatedAt          DateTime  @updatedAt @map("updatedAt")

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           Int       @id @default(autoincrement())
  userId       Int       @map("userId")
  expires      DateTime?
  sessionToken String?   @unique @map("sessionToken")
  accessToken  String?   @unique @map("accessToken")
  createdAt    DateTime? @default(now()) @map("createdAt")
  updatedAt    DateTime? @updatedAt @map("updatedAt")

  user User @relation(fields: [userId], references: [id])

  @@map("sessions")
}

model Checkout {
  id               Int       @id @default(autoincrement())
  quantity         Int
  userId           Int
  stripeCheckoutId String?   @map("stripeCheckoutId")
  createdAt        DateTime? @default(now()) @map("createdAt")
  updatedAt        DateTime? @updatedAt @map("updatedAt")

  user User @relation(fields: [userId], references: [id])
}

model Picks {
  id          Int    @id @default(autoincrement())
  week        Int
  team        String
  entryNumber Int
  userId      Int

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, week, entryNumber], name: "userId_week_entryNumber")
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String   @unique @map("identifier")
  token      String   @map("token")
  expires    DateTime @map("expires")
  createdAt  DateTime @default(now()) @map("createdAt")
  updatedAt  DateTime @updatedAt @map("updatedAt")

  @@map("verificationTokens")
}
